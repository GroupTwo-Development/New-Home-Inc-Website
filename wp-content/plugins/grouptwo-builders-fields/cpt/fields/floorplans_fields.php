<?php
if( function_exists('acf_add_local_field_group') ):

	acf_add_local_field_group(array(
		'key' => 'group_61706a478b6b8',
		'title' => 'Floorplan Location',
		'fields' => array(
			array(
				'key' => 'field_61706bf8bfdb0',
				'label' => 'THE BASICS',
				'name' => '',
				'type' => 'tab',
				'instructions' => '',
				'required' => 0,
				'conditional_logic' => 0,
				'wrapper' => array(
					'width' => '',
					'class' => '',
					'id' => '',
				),
				'placement' => 'left',
				'endpoint' => 0,
			),
			array(
				'key' => 'field_6176a8a7b6dff',
				'label' => 'Plan Name',
				'name' => 'plan_name',
				'type' => 'text',
				'instructions' => '',
				'required' => 0,
				'conditional_logic' => 0,
				'wrapper' => array(
					'width' => '',
					'class' => '',
					'id' => '',
				),
				'default_value' => '',
				'placeholder' => '',
				'prepend' => '',
				'append' => '',
				'maxlength' => '',
			),
			array(
				'key' => 'field_61706cffbfdb3',
				'label' => 'Plan Type Name',
				'name' => 'plan_type_name',
				'type' => 'select',
				'instructions' => 'The specific type of house for this plan.',
				'required' => 0,
				'conditional_logic' => 0,
				'wrapper' => array(
					'width' => '',
					'class' => '',
					'id' => '',
				),
				'choices' => array(
					'Single Family' => 'Single Family',
					'Condominium' => 'Condominium',
					'Townhome' => 'Townhome',
					'Townhouse' => 'Townhouse',
					'Carriage House' => 'Carriage House',
					'Garden Home' => 'Garden Home',
					'Duplex' => 'Duplex',
					'Multiplex' => 'Multiplex',
				),
				'default_value' => false,
				'allow_null' => 0,
				'multiple' => 0,
				'ui' => 1,
				'ajax' => 1,
				'return_format' => 'value',
				'placeholder' => '',
			),
			array(
				'key' => 'field_6176ac76b1a49',
				'label' => 'Featured Home',
				'name' => 'featured_home',
				'type' => 'true_false',
				'instructions' => 'Checkbox to featured this home on the “featured showcase homes” section of the home page',
				'required' => 0,
				'conditional_logic' => 0,
				'wrapper' => array(
					'width' => '',
					'class' => '',
					'id' => '',
				),
				'message' => '',
				'default_value' => 1,
				'ui' => 1,
				'ui_on_text' => 'Yes',
				'ui_off_text' => 'No',
			),
			array(
				'key' => 'field_61706c28bfdb1',
				'label' => 'Plan Type',
				'name' => 'plan_type',
				'type' => 'select',
				'instructions' => 'Condos and townhomes should use MultiFamily.',
				'required' => 1,
				'conditional_logic' => 0,
				'wrapper' => array(
					'width' => '',
					'class' => '',
					'id' => '',
				),
				'choices' => array(
					'Single Family' => 'SingleFamily',
					'Multi Family' => 'MultiFamily',
				),
				'default_value' => false,
				'allow_null' => 0,
				'multiple' => 0,
				'ui' => 1,
				'ajax' => 1,
				'return_format' => 'array',
				'placeholder' => '',
			),
			array(
				'key' => 'field_6171a6b62238d',
				'label' => 'Community',
				'name' => 'community',
				'type' => 'taxonomy',
				'instructions' => '',
				'required' => 1,
				'conditional_logic' => 0,
				'wrapper' => array(
					'width' => '',
					'class' => '',
					'id' => '',
				),
				'taxonomy' => 'floorplan-category',
				'field_type' => 'select',
				'allow_null' => 0,
				'add_term' => 0,
				'save_terms' => 1,
				'load_terms' => 1,
				'return_format' => 'object',
				'multiple' => 0,
			),
			array(
				'key' => 'field_61706cb3bfdb2',
				'label' => 'Plan Number',
				'name' => 'plan_number_id',
				'type' => 'number',
				'instructions' => 'Unique identification number within all plans for the subdivision.',
				'required' => 1,
				'conditional_logic' => 0,
				'wrapper' => array(
					'width' => '',
					'class' => '',
					'id' => '',
				),
				'default_value' => '',
				'placeholder' => '',
				'prepend' => '',
				'append' => '',
				'min' => 5,
				'max' => '',
				'step' => '',
			),
			array(
				'key' => 'field_61706d49bfdb4',
				'label' => 'Base Price',
				'name' => 'base_price',
				'type' => 'number',
				'instructions' => 'The base (starting) price for this plan.',
				'required' => 0,
				'conditional_logic' => 0,
				'wrapper' => array(
					'width' => '',
					'class' => '',
					'id' => '',
				),
				'default_value' => '',
				'placeholder' => '',
				'prepend' => '',
				'append' => '',
				'min' => '',
				'max' => '',
				'step' => '',
			),
			array(
				'key' => 'field_61706d83bfdb5',
				'label' => 'Base Sqft',
				'name' => 'base_sqft',
				'type' => 'number',
				'instructions' => 'The base finished square footage (area).',
				'required' => 0,
				'conditional_logic' => 0,
				'wrapper' => array(
					'width' => '',
					'class' => '',
					'id' => '',
				),
				'default_value' => '',
				'placeholder' => '',
				'prepend' => '',
				'append' => '',
				'min' => '',
				'max' => '',
				'step' => '',
			),
			array(
				'key' => 'field_61706d9fbfdb6',
				'label' => 'Stories',
				'name' => 'stories',
				'type' => 'select',
				'instructions' => 'The number of finished above ground floors.',
				'required' => 0,
				'conditional_logic' => 0,
				'wrapper' => array(
					'width' => '',
					'class' => '',
					'id' => '',
				),
				'choices' => array(
					1 => '1',
					2 => '2',
					3 => '3',
				),
				'default_value' => false,
				'allow_null' => 0,
				'multiple' => 0,
				'ui' => 1,
				'ajax' => 1,
				'return_format' => 'value',
				'placeholder' => '',
			),
			array(
				'key' => 'field_6172d9af85e93',
				'label' => 'Min Baths',
				'name' => 'min_baths',
				'type' => 'number',
				'instructions' => 'Number of full baths in the plan.',
				'required' => 0,
				'conditional_logic' => 0,
				'wrapper' => array(
					'width' => '',
					'class' => '',
					'id' => '',
				),
				'default_value' => '',
				'placeholder' => '',
				'prepend' => '',
				'append' => '',
				'min' => '',
				'max' => '',
				'step' => '',
			),
			array(
				'key' => 'field_61706de5bfdb7',
				'label' => 'Max Baths',
				'name' => 'max_baths',
				'type' => 'number',
				'instructions' => 'Number of full baths in the plan.',
				'required' => 0,
				'conditional_logic' => 0,
				'wrapper' => array(
					'width' => '',
					'class' => '',
					'id' => '',
				),
				'default_value' => '',
				'placeholder' => '',
				'prepend' => '',
				'append' => '',
				'min' => '',
				'max' => '',
				'step' => '',
			),
			array(
				'key' => 'field_61706e14bfdb8',
				'label' => 'Half Baths',
				'name' => 'half_baths',
				'type' => 'number',
				'instructions' => 'Number of full baths in the plan.',
				'required' => 0,
				'conditional_logic' => 0,
				'wrapper' => array(
					'width' => '',
					'class' => '',
					'id' => '',
				),
				'default_value' => '',
				'placeholder' => '',
				'prepend' => '',
				'append' => '',
				'min' => '',
				'max' => '',
				'step' => '',
			),
			array(
				'key' => 'field_6172d90385e92',
				'label' => 'Min Bedrooms',
				'name' => 'min_bedrooms',
				'type' => 'number',
				'instructions' => '',
				'required' => 0,
				'conditional_logic' => 0,
				'wrapper' => array(
					'width' => '',
					'class' => '',
					'id' => '',
				),
				'default_value' => '',
				'placeholder' => '',
				'prepend' => '',
				'append' => '',
				'min' => '',
				'max' => '',
				'step' => '',
			),
			array(
				'key' => 'field_61706e37bfdb9',
				'label' => 'Max Bedrooms',
				'name' => 'max_bedrooms',
				'type' => 'number',
				'instructions' => '',
				'required' => 0,
				'conditional_logic' => 0,
				'wrapper' => array(
					'width' => '',
					'class' => '',
					'id' => '',
				),
				'default_value' => '',
				'placeholder' => '',
				'prepend' => '',
				'append' => '',
				'min' => '',
				'max' => '',
				'step' => '',
			),
			array(
				'key' => 'field_61706e5dbfdba',
				'label' => 'Master Bed Location',
				'name' => 'master_bed_location',
				'type' => 'select',
				'instructions' => 'Select Down if the master bedroom is on the ground floor, Up if the master bedroom is on the first floor or higher.',
				'required' => 0,
				'conditional_logic' => 0,
				'wrapper' => array(
					'width' => '',
					'class' => '',
					'id' => '',
				),
				'choices' => array(
					'Up' => 'Up',
					'Down' => 'Down',
				),
				'default_value' => false,
				'allow_null' => 0,
				'multiple' => 0,
				'ui' => 1,
				'ajax' => 1,
				'return_format' => 'value',
				'placeholder' => '',
			),
			array(
				'key' => 'field_6176a972e93a9',
				'label' => 'Min Garage',
				'name' => 'min_garage',
				'type' => 'number',
				'instructions' => '',
				'required' => 0,
				'conditional_logic' => 0,
				'wrapper' => array(
					'width' => '',
					'class' => '',
					'id' => '',
				),
				'default_value' => '',
				'placeholder' => '',
				'prepend' => '',
				'append' => '',
				'min' => '',
				'max' => '',
				'step' => '',
			),
			array(
				'key' => 'field_61706e92bfdbb',
				'label' => 'Max Garage',
				'name' => 'max_garage',
				'type' => 'number',
				'instructions' => 'Number of cars able to fit in the garage',
				'required' => 0,
				'conditional_logic' => 0,
				'wrapper' => array(
					'width' => '',
					'class' => '',
					'id' => '',
				),
				'default_value' => '',
				'placeholder' => '',
				'prepend' => '',
				'append' => '',
				'min' => '',
				'max' => '',
				'step' => '',
			),
			array(
				'key' => 'field_61707b813ceca',
				'label' => 'Parking Type',
				'name' => 'parking_type',
				'type' => 'select',
				'instructions' => 'Multiples allowed',
				'required' => 0,
				'conditional_logic' => 0,
				'wrapper' => array(
					'width' => '',
					'class' => '',
					'id' => '',
				),
				'choices' => array(
					'Carport' => 'Carport',
					'Garage Attached' => 'Garage Attached',
					'Garage Detached' => 'Garage Detached',
					'Off Street' => 'Off Street',
					'On Street' => 'On Street',
					'None' => 'None',
				),
				'default_value' => array(
				),
				'allow_null' => 0,
				'multiple' => 1,
				'ui' => 1,
				'ajax' => 1,
				'return_format' => 'value',
				'placeholder' => '',
			),
			array(
				'key' => 'field_61706eabbfdbc',
				'label' => 'Living Area Type',
				'name' => 'living_area_type',
				'type' => 'select',
				'instructions' => 'Indicate whether a type of living area exists. This element can be used multiple times, once for each type.
The type of living area.',
				'required' => 0,
				'conditional_logic' => 0,
				'wrapper' => array(
					'width' => '',
					'class' => '',
					'id' => '',
				),
				'choices' => array(
					'LivingRoom' => 'LivingRoom',
					'DiningRoom' => 'DiningRoom',
					'FamilyRoom' => 'FamilyRoom',
					'SunRoom' => 'SunRoom',
					'Study' => 'Study',
					'Loft' => 'Loft',
					'Office' => 'Office',
					'GameRoom' => 'GameRoom',
					'MediaRoom' => 'MediaRoom',
					'GuestRoom' => 'GuestRoom',
					'BonusRoom' => 'BonusRoom',
				),
				'default_value' => array(
				),
				'allow_null' => 0,
				'multiple' => 1,
				'ui' => 1,
				'ajax' => 1,
				'return_format' => 'value',
				'placeholder' => '',
			),
			array(
				'key' => 'field_61706f41bfdbd',
				'label' => 'Basement',
				'name' => 'basement',
				'type' => 'true_false',
				'instructions' => '',
				'required' => 0,
				'conditional_logic' => 0,
				'wrapper' => array(
					'width' => '',
					'class' => '',
					'id' => '',
				),
				'message' => '',
				'default_value' => 1,
				'ui' => 1,
				'ui_on_text' => 'Yes',
				'ui_off_text' => 'No',
			),
			array(
				'key' => 'field_617075163cebf',
				'label' => 'Plan Website',
				'name' => 'plan_website',
				'type' => 'url',
				'instructions' => '',
				'required' => 0,
				'conditional_logic' => 0,
				'wrapper' => array(
					'width' => '',
					'class' => '',
					'id' => '',
				),
				'default_value' => '',
				'placeholder' => '',
			),
			array(
				'key' => 'field_617073753ceba',
				'label' => 'Description',
				'name' => 'plan_description',
				'type' => 'textarea',
				'instructions' => 'The textual description of the plan to highlight features and strengths.',
				'required' => 0,
				'conditional_logic' => 0,
				'wrapper' => array(
					'width' => '',
					'class' => '',
					'id' => '',
				),
				'default_value' => '',
				'placeholder' => '',
				'maxlength' => '',
				'rows' => '',
				'new_lines' => 'wpautop',
			),
			array(
				'key' => 'field_61706fdcbfdbe',
				'label' => 'FEATURES & UPGRADES',
				'name' => '',
				'type' => 'tab',
				'instructions' => '',
				'required' => 0,
				'conditional_logic' => 0,
				'wrapper' => array(
					'width' => '',
					'class' => '',
					'id' => '',
				),
				'placement' => 'left',
				'endpoint' => 0,
			),
			array(
				'key' => 'field_61707014bfdbf',
				'label' => 'Plan Amenity Type',
				'name' => 'plan_amenity_type',
				'type' => 'select',
				'instructions' => 'Indicate whether a type of amenity exists. This element can be used multiple times, once for each Type.
The type of amenity.',
				'required' => 0,
				'conditional_logic' => 0,
				'wrapper' => array(
					'width' => '',
					'class' => '',
					'id' => '',
				),
				'choices' => array(
					'Bay Windows' => 'Bay Windows',
					'Breakfast Area' => 'Breakfast Area',
					'Covered Patio' => 'Covered Patio',
					'Fireplaces' => 'Fireplaces',
					'Green Construction' => 'Green Construction',
					'MudRoom' => 'MudRoom',
					'Playroom' => 'Playroom',
					'vaulted ceilings' => 'vaulted ceilings',
					'WalkInClosets' => 'WalkInClosets',
				),
				'default_value' => array(
				),
				'allow_null' => 0,
				'multiple' => 1,
				'ui' => 1,
				'ajax' => 1,
				'return_format' => 'value',
				'placeholder' => '',
			),
			array(
				'key' => 'field_617074473cebb',
				'label' => 'PHOTOS & VIDEOS',
				'name' => '',
				'type' => 'tab',
				'instructions' => '',
				'required' => 0,
				'conditional_logic' => 0,
				'wrapper' => array(
					'width' => '',
					'class' => '',
					'id' => '',
				),
				'placement' => 'left',
				'endpoint' => 0,
			),
			array(
				'key' => 'field_6170746a3cebc',
				'label' => 'Featured Image',
				'name' => 'featured_image',
				'type' => 'image',
				'instructions' => '',
				'required' => 0,
				'conditional_logic' => 0,
				'wrapper' => array(
					'width' => '',
					'class' => '',
					'id' => '',
				),
				'return_format' => 'array',
				'preview_size' => 'medium',
				'library' => 'all',
				'min_width' => '',
				'min_height' => '',
				'min_size' => '',
				'max_width' => '',
				'max_height' => '',
				'max_size' => '',
				'mime_types' => '',
			),
			array(
				'key' => 'field_617074843cebd',
				'label' => 'Gallery',
				'name' => 'gallery',
				'type' => 'gallery',
				'instructions' => '',
				'required' => 0,
				'conditional_logic' => 0,
				'wrapper' => array(
					'width' => '',
					'class' => '',
					'id' => '',
				),
				'return_format' => 'array',
				'preview_size' => 'medium',
				'insert' => 'append',
				'library' => 'all',
				'min' => '',
				'max' => '',
				'min_width' => '',
				'min_height' => '',
				'min_size' => '',
				'max_width' => '',
				'max_height' => '',
				'max_size' => '',
				'mime_types' => '',
			),
			array(
				'key' => 'field_617074cd3cebe',
				'label' => 'Elevation Images',
				'name' => 'elevation_image',
				'type' => 'gallery',
				'instructions' => 'Link to the elevation image. Multiple elements are allowed.',
				'required' => 0,
				'conditional_logic' => 0,
				'wrapper' => array(
					'width' => '',
					'class' => '',
					'id' => '',
				),
				'return_format' => 'array',
				'preview_size' => 'medium',
				'insert' => 'append',
				'library' => 'all',
				'min' => '',
				'max' => '',
				'min_width' => '',
				'min_height' => '',
				'min_size' => '',
				'max_width' => '',
				'max_height' => '',
				'max_size' => '',
				'mime_types' => '',
			),
			array(
				'key' => 'field_617076ce3cec0',
				'label' => 'Virtual Tour',
				'name' => 'virtual_tour',
				'type' => 'group',
				'instructions' => 'Hosted virtual tour for this plan.',
				'required' => 0,
				'conditional_logic' => 0,
				'wrapper' => array(
					'width' => '',
					'class' => '',
					'id' => '',
				),
				'layout' => 'block',
				'sub_fields' => array(
					array(
						'key' => 'field_617076e03cec1',
						'label' => 'Virtual Tour URL',
						'name' => 'virtualtour_url',
						'type' => 'text',
						'instructions' => '',
						'required' => 0,
						'conditional_logic' => 0,
						'wrapper' => array(
							'width' => '',
							'class' => '',
							'id' => '',
						),
						'default_value' => '',
						'placeholder' => '',
						'prepend' => '',
						'append' => '',
						'maxlength' => '',
					),
					array(
						'key' => 'field_617077053cec2',
						'label' => 'Virtual Tour Covered Image',
						'name' => 'virtual_tour_covered_image',
						'type' => 'image',
						'instructions' => '',
						'required' => 0,
						'conditional_logic' => 0,
						'wrapper' => array(
							'width' => '',
							'class' => '',
							'id' => '',
						),
						'return_format' => 'array',
						'preview_size' => 'medium',
						'library' => 'all',
						'min_width' => '',
						'min_height' => '',
						'min_size' => '',
						'max_width' => '',
						'max_height' => '',
						'max_size' => '',
						'mime_types' => '',
					),
				),
			),
			array(
				'key' => 'field_617078a33cec3',
				'label' => 'Video',
				'name' => 'plan_video',
				'type' => 'oembed',
				'instructions' => 'URL for a video about the plan.',
				'required' => 0,
				'conditional_logic' => 0,
				'wrapper' => array(
					'width' => '',
					'class' => '',
					'id' => '',
				),
				'width' => '',
				'height' => '',
			),
			array(
				'key' => 'field_617079363cec4',
				'label' => 'FEATURES & UPGRADES',
				'name' => '',
				'type' => 'tab',
				'instructions' => '',
				'required' => 0,
				'conditional_logic' => 0,
				'wrapper' => array(
					'width' => '',
					'class' => '',
					'id' => '',
				),
				'placement' => 'left',
				'endpoint' => 0,
			),
			array(
				'key' => 'field_617079493cec5',
				'label' => 'Architecture Style',
				'name' => 'architecture_style',
				'type' => 'select',
				'instructions' => '',
				'required' => 0,
				'conditional_logic' => 0,
				'wrapper' => array(
					'width' => '',
					'class' => '',
					'id' => '',
				),
				'choices' => array(
					'Bungalow' => 'Bungalow',
					'CapeCod' => 'CapeCod',
					'Colonial' => 'Colonial',
					'Contemporary' => 'Contemporary',
					'Craftsman' => 'Craftsman',
					'French' => 'French',
					'Georgian' => 'Georgian',
					'Loft' => 'Loft',
					'Modern' => 'Modern',
					'Queen AnneVictorian' => 'Queen AnneVictorian',
					'RanchRambler' => 'RanchRambler',
					'SantaFePuebloStyle' => 'SantaFePuebloStyle',
					'Spanish' => 'Spanish',
					'Split-level' => 'Split-level',
					'Tudor' => 'Tudor',
					'Other' => 'Other',
				),
				'default_value' => false,
				'allow_null' => 0,
				'multiple' => 0,
				'ui' => 1,
				'ajax' => 1,
				'return_format' => 'value',
				'placeholder' => '',
			),
			array(
				'key' => 'field_61707a263cec6',
				'label' => 'Attic',
				'name' => 'attic',
				'type' => 'true_false',
				'instructions' => '',
				'required' => 0,
				'conditional_logic' => 0,
				'wrapper' => array(
					'width' => '',
					'class' => '',
					'id' => '',
				),
				'message' => '',
				'default_value' => 1,
				'ui' => 1,
				'ui_on_text' => 'Yes',
				'ui_off_text' => 'No',
			),
			array(
				'key' => 'field_61707a663cec7',
				'label' => 'Cooling Systems',
				'name' => 'cooling_systems',
				'type' => 'select',
				'instructions' => 'Multiples allowed.',
				'required' => 0,
				'conditional_logic' => 0,
				'wrapper' => array(
					'width' => '',
					'class' => '',
					'id' => '',
				),
				'choices' => array(
					'None' => 'None',
					'Central' => 'Central',
					'Evaporative' => 'Evaporative',
					'Geothermal' => 'Geothermal',
					'Wall' => 'Wall',
					'Solar' => 'Solar',
					'Other' => 'Other',
				),
				'default_value' => array(
				),
				'allow_null' => 0,
				'multiple' => 1,
				'ui' => 1,
				'ajax' => 1,
				'return_format' => 'value',
				'placeholder' => '',
			),
			array(
				'key' => 'field_61707ac83cec8',
				'label' => 'Exterior Type',
				'name' => 'exterior_type',
				'type' => 'select',
				'instructions' => 'Multiples allowed.',
				'required' => 0,
				'conditional_logic' => 0,
				'wrapper' => array(
					'width' => '',
					'class' => '',
					'id' => '',
				),
				'choices' => array(
					'Brick' => 'Brick',
					'Cement Concrete' => 'Cement Concrete',
					'Composition' => 'Composition',
					'Metal' => 'Metal',
					'Shingle' => 'Shingle',
					'Stone' => 'Stone',
					'Stucco' => 'Stucco',
					'Vinyl' => 'Vinyl',
					'Wood' => 'Wood',
					'wood products' => 'wood products',
					'Other' => 'Other',
				),
				'default_value' => array(
				),
				'allow_null' => 0,
				'multiple' => 1,
				'ui' => 1,
				'ajax' => 1,
				'return_format' => 'value',
				'placeholder' => '',
			),
			array(
				'key' => 'field_61707b283cec9',
				'label' => 'Heating Fuel',
				'name' => 'heating_fuel',
				'type' => 'select',
				'instructions' => '',
				'required' => 0,
				'conditional_logic' => 0,
				'wrapper' => array(
					'width' => '',
					'class' => '',
					'id' => '',
				),
				'choices' => array(
					'Multiples allowed.' => 'Multiples allowed.',
				),
				'default_value' => array(
					0 => 'Baseboard',
					1 => 'ForcedAir',
					2 => 'HeatPump',
					3 => 'Radiant',
					4 => 'Stove',
					5 => 'Wall',
					6 => 'Other',
				),
				'allow_null' => 0,
				'multiple' => 1,
				'ui' => 1,
				'ajax' => 1,
				'return_format' => 'value',
				'placeholder' => '',
			),
			array(
				'key' => 'field_61707bcf3cecb',
				'label' => 'Roof Type',
				'name' => 'roof_type',
				'type' => 'select',
				'instructions' => 'Multiples allowed.',
				'required' => 0,
				'conditional_logic' => 0,
				'wrapper' => array(
					'width' => '',
					'class' => '',
					'id' => '',
				),
				'choices' => array(
					'Asphalt' => 'Asphalt',
					'BuiltUp' => 'BuiltUp',
					'Composition' => 'Composition',
					'Metal' => 'Metal',
					'ShakeShingle' => 'ShakeShingle',
					'Slate' => 'Slate',
					'Tile' => 'Tile',
					'Other' => 'Other',
				),
				'default_value' => array(
				),
				'allow_null' => 0,
				'multiple' => 1,
				'ui' => 1,
				'ajax' => 1,
				'return_format' => 'value',
				'placeholder' => '',
			),
			array(
				'key' => 'field_61771285283c3',
				'label' => 'Smart Features',
				'name' => 'plan_smart_features',
				'type' => 'taxonomy',
				'instructions' => '',
				'required' => 0,
				'conditional_logic' => 0,
				'wrapper' => array(
					'width' => '',
					'class' => '',
					'id' => '',
				),
				'taxonomy' => 'features',
				'field_type' => 'multi_select',
				'allow_null' => 0,
				'add_term' => 1,
				'save_terms' => 1,
				'load_terms' => 1,
				'return_format' => 'object',
				'multiple' => 0,
			),
			array(
				'key' => 'field_617712ac283c4',
				'label' => 'New Features',
				'name' => 'plan_new_features',
				'type' => 'taxonomy',
				'instructions' => '',
				'required' => 0,
				'conditional_logic' => 0,
				'wrapper' => array(
					'width' => '',
					'class' => '',
					'id' => '',
				),
				'taxonomy' => 'features',
				'field_type' => 'multi_select',
				'allow_null' => 0,
				'add_term' => 1,
				'save_terms' => 1,
				'load_terms' => 1,
				'return_format' => 'object',
				'multiple' => 0,
			),
			array(
				'key' => 'field_617712c5283c5',
				'label' => 'Healthy Features',
				'name' => 'plan_healthy_features',
				'type' => 'taxonomy',
				'instructions' => '',
				'required' => 0,
				'conditional_logic' => 0,
				'wrapper' => array(
					'width' => '',
					'class' => '',
					'id' => '',
				),
				'taxonomy' => 'features',
				'field_type' => 'multi_select',
				'allow_null' => 0,
				'add_term' => 1,
				'save_terms' => 1,
				'load_terms' => 1,
				'return_format' => 'object',
				'multiple' => 0,
			),
		),
		'location' => array(
			array(
				array(
					'param' => 'post_type',
					'operator' => '==',
					'value' => 'floorplan',
				),
			),
		),
		'menu_order' => 0,
		'position' => 'acf_after_title',
		'style' => 'default',
		'label_placement' => 'top',
		'instruction_placement' => 'label',
		'hide_on_screen' => array(
			0 => 'the_content',
			1 => 'excerpt',
			2 => 'discussion',
			3 => 'comments',
			4 => 'author',
			5 => 'featured_image',
			6 => 'categories',
			7 => 'tags',
		),
		'active' => true,
		'description' => '',
	));

endif;